# Generated by Django 5.1.5 on 2025-02-12 05:48

import apps.base.utils
import apps.users.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('profile_pic', models.ImageField(blank=True, null=True, upload_to=apps.users.models.user_picture_upload)),
                ('bio', models.TextField(blank=True, null=True)),
                ('secret_key', models.CharField(blank=True, default=apps.base.utils.generate_random_number, max_length=11)),
                ('is_deleted', models.BooleanField(default=False)),
                ('is_deleted_on', models.DateTimeField(blank=True, null=True)),
                ('verification_token', models.UUIDField(blank=True, null=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_teacher', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'pulikids_user',
            },
        ),
    ]
